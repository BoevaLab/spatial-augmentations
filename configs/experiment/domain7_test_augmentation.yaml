# @package _global_

defaults:
  - override /data: spatial_omics
  - override /model: bgrl_domain
  - override /trainer: gpu

# all parameters below will be merged with parameters from default configurations set above
# this allows you to overwrite only specified parameters

task_name: "domain7_test_augmentation"
tags: ["domain7", "test", "augmentation"]
ckpt_path: ${paths.log_dir}domain7_hparam_augmentation/multiruns/2025-05-17_16-34-07/6/checkpoints/epoch_988.ckpt

data:
  data_dir: ${paths.data_dir}domain/raw_7/
  processed_dir: ${paths.data_dir}domain/processed_7/
  batch_size: 8
  num_workers: 4
  pin_memory: False
  min_cells: 2
  min_genes: 10
  augmentation_mode: "baseline"
  lambda_param: 0.1
  sigma_param: 0.1
  n_pca_components: 50
  graph_method: "knn"
  n_neighbors: 10
  redo_preprocess: False

model:
  net:
    encoder:
      input_size: 50
      hidden_size: 32
      output_size: 16
      dropout: 0.30
    projector:
      input_size: ${model.net.encoder.output_size}
      output_size: ${model.net.encoder.output_size}
      hidden_size: 32

  optimizer:
    _partial_: true
    lr: 0.00045
    weight_decay: 0.003

  scheduler:
    _partial_: true
    T_max: 25974
    eta_min: 1e-7

  compile: false # compile model for faster training with pytorch 2.0
  augmentation_mode: "advanced" # augmetation mode, either baseline or advanced
  augmentation_list1: ["DropImportance", "SpatialNoise"] # list of augmentations to apply for first view
  augmentation_list2: ["DropImportance", "FeatureNoise"] # list of augmentations to apply for second view
  mm: 0.99 # momentum for moving average of target encoder
  warmup_steps: 100 # number of warmup steps
  total_steps: 25974 # total number of training steps
  spatial_regularization_strength: 0.36 # hyperparameter for the spatial regularization
  node_subset_sz: 5000 # number of nodes to sample for accelerated spatial regularization
  drop_edge_p1: 0. # drop edge probability for first augmentation
  drop_edge_p2: 0. # drop edge probability for second augmentation
  drop_feat_p1: 0. # drop feature probability for first augmentation
  drop_feat_p2: 0. # drop feature probability for second augmentation
  mu: 0.11 # hyperparameter for the graph augmentation
  p_lambda: 0.40 # hyperparameter for the graph augmentation
  p_rewire: 0. # hyperparameter for the graph augmentation
  p_shuffle: 0. # hyperparameter for the graph augmentation
  spatial_noise_std: 0.013 # standard deviation of the spatial noise
  feature_noise_std: 0.78 # standard deviation of the feature noise
  p_add: 0. # hyperparameter for the graph augmentation
  k_add: 0 # hyperparameter for the graph augmentation
  processed_dir: ${paths.data_dir}domain/processed_7/ # directory for processed data

trainer:
  min_epochs: 1 # prevents early stopping
  max_epochs: 999
  log_every_n_steps: 4
  check_val_every_n_epoch: 9999
  precision: 16
  accumulate_grad_batches: 4
